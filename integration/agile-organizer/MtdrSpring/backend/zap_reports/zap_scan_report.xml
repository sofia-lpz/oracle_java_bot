<?xml version="1.0"?>
<OWASPZAPReport programName="ZAP" version="2.16.1" generated="Thu, 15 May 2025 07:09:25">
	
		<site name="http://localhost:9898" host="localhost" port="9898" ssl="false">
			<alerts>
				
					<alertitem>
						<pluginid>10038</pluginid>
						<alertRef>10038-1</alertRef>
						<alert>Content Security Policy (CSP) Header Not Set</alert>
						<name>Content Security Policy (CSP) Header Not Set</name>
						<riskcode>2</riskcode>
						<confidence>3</confidence>
						<riskdesc>Medium (High)</riskdesc>
						<confidencedesc>High</confidencedesc>
						<desc>&lt;p&gt;Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page &#x2014; covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.&lt;/p&gt;</desc>
						<instances>
							
								<instance>
									<uri>http://localhost:9898</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://localhost:9898/</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
						</instances>
						<count>2</count>
						<solution>&lt;p&gt;Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.&lt;/p&gt;</solution>
						<otherinfo></otherinfo>
						<reference>&lt;p&gt;https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy&lt;/p&gt;&lt;p&gt;https://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html&lt;/p&gt;&lt;p&gt;https://www.w3.org/TR/CSP/&lt;/p&gt;&lt;p&gt;https://w3c.github.io/webappsec-csp/&lt;/p&gt;&lt;p&gt;https://web.dev/articles/csp&lt;/p&gt;&lt;p&gt;https://caniuse.com/#feat=contentsecuritypolicy&lt;/p&gt;&lt;p&gt;https://content-security-policy.com/&lt;/p&gt;</reference>
						<cweid>693</cweid>
						<wascid>15</wascid>
						<sourceid>7</sourceid>
					</alertitem>
				
				
					<alertitem>
						<pluginid>90004</pluginid>
						<alertRef>90004-1</alertRef>
						<alert>Insufficient Site Isolation Against Spectre Vulnerability</alert>
						<name>Insufficient Site Isolation Against Spectre Vulnerability</name>
						<riskcode>1</riskcode>
						<confidence>2</confidence>
						<riskdesc>Low (Medium)</riskdesc>
						<confidencedesc>Medium</confidencedesc>
						<desc>&lt;p&gt;Cross-Origin-Resource-Policy header is an opt-in header designed to counter side-channels attacks like Spectre. Resource should be specifically set as shareable amongst different origins.&lt;/p&gt;</desc>
						<instances>
							
								<instance>
									<uri>http://localhost:9898</uri>
									<method>GET</method>
									<param>Cross-Origin-Resource-Policy</param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://localhost:9898/</uri>
									<method>GET</method>
									<param>Cross-Origin-Resource-Policy</param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://localhost:9898/manifest.json</uri>
									<method>GET</method>
									<param>Cross-Origin-Resource-Policy</param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://localhost:9898/static/css/main.4e0606ab.css</uri>
									<method>GET</method>
									<param>Cross-Origin-Resource-Policy</param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://localhost:9898/static/js/main.9979c49b.js</uri>
									<method>GET</method>
									<param>Cross-Origin-Resource-Policy</param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://localhost:9898</uri>
									<method>GET</method>
									<param>Cross-Origin-Embedder-Policy</param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://localhost:9898/</uri>
									<method>GET</method>
									<param>Cross-Origin-Embedder-Policy</param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://localhost:9898</uri>
									<method>GET</method>
									<param>Cross-Origin-Opener-Policy</param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://localhost:9898/</uri>
									<method>GET</method>
									<param>Cross-Origin-Opener-Policy</param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
						</instances>
						<count>9</count>
						<solution>&lt;p&gt;Ensure that the application/web server sets the Cross-Origin-Resource-Policy header appropriately, and that it sets the Cross-Origin-Resource-Policy header to &apos;same-origin&apos; for all web pages.&lt;/p&gt;&lt;p&gt;&apos;same-site&apos; is considered as less secured and should be avoided.&lt;/p&gt;&lt;p&gt;If resources must be shared, set the header to &apos;cross-origin&apos;.&lt;/p&gt;&lt;p&gt;If possible, ensure that the end user uses a standards-compliant and modern web browser that supports the Cross-Origin-Resource-Policy header (https://caniuse.com/mdn-http_headers_cross-origin-resource-policy).&lt;/p&gt;</solution>
						<otherinfo></otherinfo>
						<reference>&lt;p&gt;https://developer.mozilla.org/en-US/docs/Web/HTTP/Cross-Origin_Resource_Policy&lt;/p&gt;</reference>
						<cweid>693</cweid>
						<wascid>14</wascid>
						<sourceid>7</sourceid>
					</alertitem>
				
				
					<alertitem>
						<pluginid>10063</pluginid>
						<alertRef>10063-1</alertRef>
						<alert>Permissions Policy Header Not Set</alert>
						<name>Permissions Policy Header Not Set</name>
						<riskcode>1</riskcode>
						<confidence>2</confidence>
						<riskdesc>Low (Medium)</riskdesc>
						<confidencedesc>Medium</confidencedesc>
						<desc>&lt;p&gt;Permissions Policy Header is an added layer of security that helps to restrict from unauthorized access or usage of browser/client features by web resources. This policy ensures the user privacy by limiting or specifying the features of the browsers can be used by the web resources. Permissions Policy provides a set of standard HTTP headers that allow website owners to limit which features of browsers can be used by the page such as camera, microphone, location, full screen etc.&lt;/p&gt;</desc>
						<instances>
							
								<instance>
									<uri>http://localhost:9898</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://localhost:9898/</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://localhost:9898/static/js/main.9979c49b.js</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
						</instances>
						<count>3</count>
						<solution>&lt;p&gt;Ensure that your web server, application server, load balancer, etc. is configured to set the Permissions-Policy header.&lt;/p&gt;</solution>
						<otherinfo></otherinfo>
						<reference>&lt;p&gt;https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Permissions-Policy&lt;/p&gt;&lt;p&gt;https://developer.chrome.com/blog/feature-policy/&lt;/p&gt;&lt;p&gt;https://scotthelme.co.uk/a-new-security-header-feature-policy/&lt;/p&gt;&lt;p&gt;https://w3c.github.io/webappsec-feature-policy/&lt;/p&gt;&lt;p&gt;https://www.smashingmagazine.com/2018/12/feature-policy/&lt;/p&gt;</reference>
						<cweid>693</cweid>
						<wascid>15</wascid>
						<sourceid>7</sourceid>
					</alertitem>
				
				
					<alertitem>
						<pluginid>10096</pluginid>
						<alertRef>10096</alertRef>
						<alert>Timestamp Disclosure - Unix</alert>
						<name>Timestamp Disclosure - Unix</name>
						<riskcode>1</riskcode>
						<confidence>1</confidence>
						<riskdesc>Low (Low)</riskdesc>
						<confidencedesc>Low</confidencedesc>
						<desc>&lt;p&gt;A timestamp was disclosed by the application/web server. - Unix&lt;/p&gt;</desc>
						<instances>
							
								<instance>
									<uri>http://localhost:9898/static/js/main.9979c49b.js</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>1540483477</evidence>
									<otherinfo>1540483477, which evaluates to: 2018-10-25 16:04:37.</otherinfo>
								</instance>
							
						</instances>
						<count>1</count>
						<solution>&lt;p&gt;Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.&lt;/p&gt;</solution>
						<otherinfo>&lt;p&gt;1540483477, which evaluates to: 2018-10-25 16:04:37.&lt;/p&gt;</otherinfo>
						<reference>&lt;p&gt;https://cwe.mitre.org/data/definitions/200.html&lt;/p&gt;</reference>
						<cweid>497</cweid>
						<wascid>13</wascid>
						<sourceid>16</sourceid>
					</alertitem>
				
				
					<alertitem>
						<pluginid>10027</pluginid>
						<alertRef>10027</alertRef>
						<alert>Information Disclosure - Suspicious Comments</alert>
						<name>Information Disclosure - Suspicious Comments</name>
						<riskcode>0</riskcode>
						<confidence>1</confidence>
						<riskdesc>Informational (Low)</riskdesc>
						<confidencedesc>Low</confidencedesc>
						<desc>&lt;p&gt;The response appears to contain suspicious comments which may help an attacker.&lt;/p&gt;</desc>
						<instances>
							
								<instance>
									<uri>http://localhost:9898/static/js/main.9979c49b.js</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>TODO</evidence>
									<otherinfo>The following pattern was used: \bTODO\b and was detected in likely comment: &quot;//react.dev/errors/&quot;+e;if(1&lt;arguments.length){t+=&quot;?args[]=&quot;+encodeURIComponent(arguments[1]);for(var n=2;n&lt;arguments.length;n++)&quot;, see evidence field for the suspicious comment/snippet.</otherinfo>
								</instance>
							
						</instances>
						<count>1</count>
						<solution>&lt;p&gt;Remove all comments that return information that may help an attacker and fix any underlying problems they refer to.&lt;/p&gt;</solution>
						<otherinfo>&lt;p&gt;The following pattern was used: \bTODO\b and was detected in likely comment: &quot;//react.dev/errors/&quot;+e;if(1&lt;arguments.length){t+=&quot;?args[]=&quot;+encodeURIComponent(arguments[1]);for(var n=2;n&lt;arguments.length;n++)&quot;, see evidence field for the suspicious comment/snippet.&lt;/p&gt;</otherinfo>
						<reference></reference>
						<cweid>615</cweid>
						<wascid>13</wascid>
						<sourceid>16</sourceid>
					</alertitem>
				
				
					<alertitem>
						<pluginid>10109</pluginid>
						<alertRef>10109</alertRef>
						<alert>Modern Web Application</alert>
						<name>Modern Web Application</name>
						<riskcode>0</riskcode>
						<confidence>2</confidence>
						<riskdesc>Informational (Medium)</riskdesc>
						<confidencedesc>Medium</confidencedesc>
						<desc>&lt;p&gt;The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.&lt;/p&gt;</desc>
						<instances>
							
								<instance>
									<uri>http://localhost:9898</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>&lt;script defer=&quot;defer&quot; src=&quot;./static/js/main.9979c49b.js&quot;&gt;&lt;/script&gt;</evidence>
									<otherinfo>No links have been found while there are scripts, which is an indication that this is a modern web application.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://localhost:9898/</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>&lt;script defer=&quot;defer&quot; src=&quot;./static/js/main.9979c49b.js&quot;&gt;&lt;/script&gt;</evidence>
									<otherinfo>No links have been found while there are scripts, which is an indication that this is a modern web application.</otherinfo>
								</instance>
							
						</instances>
						<count>2</count>
						<solution>&lt;p&gt;This is an informational alert and so no changes are required.&lt;/p&gt;</solution>
						<otherinfo>&lt;p&gt;No links have been found while there are scripts, which is an indication that this is a modern web application.&lt;/p&gt;</otherinfo>
						<reference></reference>
						<cweid>-1</cweid>
						<wascid>-1</wascid>
						<sourceid>7</sourceid>
					</alertitem>
				
				
					<alertitem>
						<pluginid>10049</pluginid>
						<alertRef>10049</alertRef>
						<alert>Non-Storable Content</alert>
						<name>Non-Storable Content</name>
						<riskcode>0</riskcode>
						<confidence>2</confidence>
						<riskdesc>Informational (Medium)</riskdesc>
						<confidencedesc>Medium</confidencedesc>
						<desc>&lt;p&gt;The response contents are not storable by caching components such as proxy servers. If the response does not contain sensitive, personal or user-specific information, it may benefit from being stored and cached, to improve performance.&lt;/p&gt;</desc>
						<instances>
							
								<instance>
									<uri>http://localhost:9898</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>no-store</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://localhost:9898/</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>no-store</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://localhost:9898/manifest.json</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>no-store</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://localhost:9898/robots.txt</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>no-store</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://localhost:9898/sitemap.xml</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>no-store</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://localhost:9898/static/css/main.4e0606ab.css</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>no-store</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://localhost:9898/static/js/main.9979c49b.js</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>no-store</evidence>
									<otherinfo></otherinfo>
								</instance>
							
						</instances>
						<count>7</count>
						<solution>&lt;p&gt;The content may be marked as storable by ensuring that the following conditions are satisfied:&lt;/p&gt;&lt;p&gt;The request method must be understood by the cache and defined as being cacheable (&quot;GET&quot;, &quot;HEAD&quot;, and &quot;POST&quot; are currently defined as cacheable)&lt;/p&gt;&lt;p&gt;The response status code must be understood by the cache (one of the 1XX, 2XX, 3XX, 4XX, or 5XX response classes are generally understood)&lt;/p&gt;&lt;p&gt;The &quot;no-store&quot; cache directive must not appear in the request or response header fields&lt;/p&gt;&lt;p&gt;For caching by &quot;shared&quot; caches such as &quot;proxy&quot; caches, the &quot;private&quot; response directive must not appear in the response&lt;/p&gt;&lt;p&gt;For caching by &quot;shared&quot; caches such as &quot;proxy&quot; caches, the &quot;Authorization&quot; header field must not appear in the request, unless the response explicitly allows it (using one of the &quot;must-revalidate&quot;, &quot;public&quot;, or &quot;s-maxage&quot; Cache-Control response directives)&lt;/p&gt;&lt;p&gt;In addition to the conditions above, at least one of the following conditions must also be satisfied by the response:&lt;/p&gt;&lt;p&gt;It must contain an &quot;Expires&quot; header field&lt;/p&gt;&lt;p&gt;It must contain a &quot;max-age&quot; response directive&lt;/p&gt;&lt;p&gt;For &quot;shared&quot; caches such as &quot;proxy&quot; caches, it must contain a &quot;s-maxage&quot; response directive&lt;/p&gt;&lt;p&gt;It must contain a &quot;Cache Control Extension&quot; that allows it to be cached&lt;/p&gt;&lt;p&gt;It must have a status code that is defined as cacheable by default (200, 203, 204, 206, 300, 301, 404, 405, 410, 414, 501).&lt;/p&gt;</solution>
						<otherinfo></otherinfo>
						<reference>&lt;p&gt;https://datatracker.ietf.org/doc/html/rfc7234&lt;/p&gt;&lt;p&gt;https://datatracker.ietf.org/doc/html/rfc7231&lt;/p&gt;&lt;p&gt;https://www.w3.org/Protocols/rfc2616/rfc2616-sec13.html&lt;/p&gt;</reference>
						<cweid>524</cweid>
						<wascid>13</wascid>
						<sourceid>7</sourceid>
					</alertitem>
				
			</alerts>
		</site>
	
</OWASPZAPReport>